rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidTimestamp(timestamp) {
      return timestamp is timestamp && 
             timestamp.seconds is number && 
             timestamp.nanos is number;
    }

    // User profiles
    match /users/{userId} {
      // Allow read if authenticated and matches userId
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow create if authenticated and creating own profile
      allow create: if isAuthenticated() && 
                      request.auth.uid == userId &&
                      request.resource.data.keys().hasAll(['email', 'createdAt', 'updatedAt']) &&
                      request.resource.data.email is string &&
                      isValidTimestamp(request.resource.data.createdAt) &&
                      isValidTimestamp(request.resource.data.updatedAt);
      
      // Allow update if authenticated and updating own profile
      allow update: if isAuthenticated() && 
                      request.auth.uid == userId &&
                      (request.resource.data.diff(resource.data).affectedKeys()
                        .hasAny(['preferences', 'updatedAt'])) &&
                      (!request.resource.data.keys().hasAny(['email', 'createdAt']) || 
                        (request.resource.data.email == resource.data.email &&
                         request.resource.data.createdAt == resource.data.createdAt));
    }
  }
} 